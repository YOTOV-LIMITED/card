{
  "name": "Card",
  "tagline": ":credit_card: make your credit card form better in one line of code",
  "body": "# Card - check out the **[demo](https://jessepollak.github.io/card)**\r\n\r\n### A better credit card form in one line of code\r\n\r\nCard will take *any* credit card form and make it the best part of the checkout process (without you changing anything). Everything is created with pure CSS, HTML, and Javascript — no images required.\r\n\r\n![card](http://i.imgur.com/qG3TenO.gif)\r\n\r\n## Usage (without jQuery)\r\n\r\nTo use, you'll need to include the Card JavaScript files into your HTML. You can find the necessary file at `/dist/card.js` and include it in your HTML like so.\r\n\r\n```html\r\n<!-- at the end of BODY -->\r\n<script src=\"/path/to/card.js\"></script>\r\n```\r\n\r\nOnce you've included those files, you can initialize Card.\r\n\r\n```javascript\r\nvar card = new Card({\r\n    // a selector or DOM element for the form where users will\r\n    // be entering their information\r\n    form: 'form', // *required*\r\n    // a selector or DOM element for the container\r\n    // where you want the card to appear\r\n    container: '.card-wrapper', // *required*\r\n\r\n    formSelectors: {\r\n        numberInput: 'input#number', // optional — default input[name=\"number\"]\r\n        expiryInput: 'input#expiry', // optional — default input[name=\"expiry\"]\r\n        cvcInput: 'input#cvc', // optional — default input[name=\"cvc\"]\r\n        nameInput: 'input#name' // optional - defaults input[name=\"name\"]\r\n    },\r\n\r\n    width: 200, // optional — default 350px\r\n    formatting: true, // optional - default true\r\n\r\n    // Strings for translation - optional\r\n    messages: {\r\n        validDate: 'valid\\ndate', // optional - default 'valid\\nthru'\r\n        monthYear: 'mm/yyyy', // optional - default 'month/year'\r\n    },\r\n\r\n    // Default placeholders for rendered fields - optional\r\n    placeholders: {\r\n        number: '•••• •••• •••• ••••',\r\n        name: 'Full Name',\r\n        expiry: '••/••',\r\n        cvc: '•••'\r\n    },\r\n\r\n    // if true, will log helpful messages for setting up Card\r\n    debug: false // optional - default false\r\n});\r\n```\r\n### Installing card from npm\r\n\r\nIf you're using npm, you can install card.js with:\r\n\r\n    npm install --save card\r\n\r\n\tvar $ = require(\"jquery\");\r\n    // The current card.js code does not explictly require jQuery, but instead uses the global, so this line is needed.\r\n    window.jQuery = $;\r\n    var card = require(\"card\");\r\n\r\n### Using multiple inputs for one field\r\n\r\nCard can be used in forms where you have multiple inputs that render to a single field (i.e. you have a first and last name input). To use Card with this functionality, just pass in a selector that selects the fields in the correct order. For example,\r\n\r\n```html\r\n<html>\r\n<body>\r\n<div class='card-wrapper'></div>\r\n<script src=\"/path/to/card.js\"></script>\r\n<form>\r\n    <input type=\"text\" name=\"number\">\r\n    <input type=\"text\" name=\"first-name\"/>\r\n    <input type=\"text\" name=\"last-name\"/>\r\n    <input type=\"text\" name=\"expiry\"/>\r\n    <input type=\"text\" name=\"cvc\"/>\r\n</form>\r\n<script>\r\nvar card = new Card({\r\n    form: 'form',\r\n    container: '.card-wrapper',\r\n\r\n    formSelectors: {\r\n        nameInput: 'input[name=\"first-name\"], input[name=\"last-name\"]'\r\n    }\r\n});\r\n</script>\r\n</body>\r\n</html>\r\n```\r\n\r\n### Rendering with different initial card placeholders\r\n\r\nCard renders with default placeholders for card `name`, `number`, `expiry`, and `cvc`. To override these placeholders, you can pass in a `placeholders` object.\r\n\r\n```html\r\n<html>\r\n<body>\r\n<div class='card-wrapper'></div>\r\n<script src=\"/path/to/card.js\"></script>\r\n<form>\r\n    <input type=\"text\" name=\"number\">\r\n    <input type=\"text\" name=\"name\"/>\r\n    <input type=\"text\" name=\"expiry\"/>\r\n    <input type=\"text\" name=\"cvc\"/>\r\n</form>\r\n<script>\r\n\r\nvar card = new Card({\r\n    form: 'form',\r\n    container: '.card-wrapper',\r\n\r\n    placeholders: {\r\n        number: '**** **** **** ****',\r\n        name: 'Arya Stark',\r\n        expiry: '**/****',\r\n        cvc: '***'\r\n    }\r\n});\r\n</script>\r\n</body>\r\n</html>\r\n```\r\n\r\n### Translation\r\n\r\nTo render the card with the strings in a different language, you can pass in a `messages` object.\r\n\r\n```html\r\n<html>\r\n<body>\r\n<div class='card-wrapper'></div>\r\n<script src=\"/path/to/card.js\"></script>\r\n<form>\r\n    <input type=\"text\" name=\"number\">\r\n    <input type=\"text\" name=\"name\"/>\r\n    <input type=\"text\" name=\"expiry\"/>\r\n    <input type=\"text\" name=\"cvc\"/>\r\n</form>\r\n<script>\r\n\r\nvar card = new Card({\r\n    form: 'form',\r\n    container: '.card-wrapper',\r\n\r\n    messages: {\r\n        validDate: 'expire\\ndate',\r\n        monthYear: 'mm/yy'\r\n    }\r\n});\r\n</script>\r\n</body>\r\n</html>\r\n```\r\n\r\n## Using with jQuery\r\n\r\nTo use with jQuery, you'll need to include the `jquery.card.js` file into your HTML. You can find the necessary file at `/dist/jquery.card.js` and include it in your HTML like so.\r\n\r\n```html\r\n<!-- at the end of BODY -->\r\n<script src=\"/path/to/jquery.card.js\"></script>\r\n```\r\n\r\nOnce you've included those files, you can initialize Card with jQuery.\r\n\r\n```javascript\r\n$('form').card({\r\n    // a selector or DOM element for the container\r\n    // where you want the card to appear\r\n    container: '.card-wrapper', // *required*\r\n\r\n    // all of the other options from above\r\n});\r\n\r\n```\r\n## Using with other javascript libraries\r\n\r\nCard has wrappers that make it easy to use with other javascript libraries:\r\n\r\n### Angular\r\n\r\n* [angular-card](https://github.com/gavruk/angular-card)\r\n\r\n### Ember\r\n\r\n* [ember-credit-card](https://github.com/esbanarango/ember-credit-card)\r\n\r\n### React\r\n\r\n* [react-credit-card](https://github.com/JohnyDays/react-credit-card)\r\n* [card-react](https://github.com/shatran/card-react)\r\n\r\n## Development\r\n\r\nTo contribute, follow this steps:\r\n\r\n```bash\r\n$ git clone --recursive https://github.com/jessepollak/card.git\r\n$ cd card\r\n$ git submodule init && git submodule update\r\n$ npm install\r\n$ npm development\r\n```\r\n\r\nNow, if you go to localhost:8080/example in your browser, you should see the demo page.\r\n\r\n## Places using Card\r\n\r\nCard is used in the wild in these places:\r\n\r\n* [InspectAll](http://www.inspectall.com/)\r\n* [PennyWhale](https://www.pennywhale.com/)\r\n* [MakeSpace](https://www.makespace.com/)\r\n* [Blumpa](http://www.blumpa.com/)\r\n* [CourseLoads](http://www.courseloads.com/)\r\n* [PubNub](http://pubnub.com/)\r\n* [GigSalad](https://www.gigsalad.com)\r\n* [Boligninja](http://www.boligninja.dk)\r\n* [EasyCarros](http://www.easycarros.com/)\r\n* [Sintelle] (http://www.sintelleparapharmacie.com/)\r\n* [Wevorce](http://wevorce.com/)\r\n* [PayumServer](https://github.com/Payum/PayumServer)\r\n* [Paribus](https://paribus.co)\r\n* [Bizzabo](https://www.bizzabo.com)\r\n* [Tortuba](https://www.tortuba.com)\r\n* [Netlify](https://www.netlify.com)\r\n\r\nAre you using Card in production? If so, we'd love to link to you from this page. Open a PR or drop [@jessepollak](http://twitter.com/jessepollak) a line on [Twitter](http://twitter.com/jessepollak) and we'll add you right away!\r\n\r\n## Donations\r\n\r\nIf you'd like to donate to help support development of Card, send Bitcoin directly to `17NUKd3v7GWben18kGhmFafa4ZpWrXpQSC` or through Coinbase [here](https://coinbase.com/jessepollak).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}